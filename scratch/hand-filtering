//            if (
//                c.toString()
//                    .contains("chain: L1[V0, V1] -> L1[V1, V2] -> L1[V0, V2], dbb: L1[L0[], L0[]], dbi: L1[L0[], L8[]], dib: L1[L8[], L0[]], dii: L1[L8[], L8[]], i: L8[], put: L1[V0, V1] -> V0 -> V1 -> L1[V0, V1")
//            ) {
//                println("I made it through all the positive examples!")
//                println("I am canonical: ${c.canonical()}")
//                println("I pass posexs: ${Unification(c, query.posExsBeforeSubexprs).get() != null}")
//                println("I pass negexs: ${
//                    (if (mustPassNegatives)
//                        query.negExamples.all { Unification(c, listOf(it)).get() == null }
//                    else true)
//                }")
////                TODO()
//            }


//        println("Exploring $c")
//        if (
//            c.toString()
//                .contains("chain: L1[V0, V1] -> L1[V1, V2] -> L1[V0, V2], dbb: L1[L0[], L0[]], dbi: L1[L0[], L8[]], dib: L1[L8[], L0[]], dii: L1[L8[], L8[]], i: L8[], put: L1[V0, V1] -> V0 -> V1 -> L1[V0, V1")
//        ) {
//            println("I have $c")
//            println(Unification(c, query.posExsBeforeSubexprs).get())
//            println(Unification(c, query.negExamples.toList()).get())
//            val tofill = c.types.withIndex().maxByOrNull { (_, it) -> it.priority() }
//            println("I get returned if this is null or priority 0: $tofill")
//            if (tofill != null) println("But instead it had priority ${tofill.value.priority()}")
//        }

//        println("Filling in ${c.names[changeInd]}")

